// <auto-generated />
using System;
using AspnetCoreMvcFull.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AspnetCoreMvcFull.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321121458_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CostCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("CraneId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomHazard")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ProjectSupervisor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CraneId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingHazard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<int>("HazardId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("HazardId");

                    b.ToTable("BookingHazards");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingItems");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDayShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNightShift")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingShifts");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Crane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cranes");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Hazard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Hazards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Listrik Tegangan Tinggi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kondisi Tanah"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bekerja di Dekat Bangunan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bekerja di Dekat Area Mining"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bekerja di Dekat Air"
                        });
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.UrgentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CraneId")
                        .HasColumnType("integer");

                    b.Property<int>("EstimatedUrgentDays")
                        .HasColumnType("integer");

                    b.Property<int>("EstimatedUrgentHours")
                        .HasColumnType("integer");

                    b.Property<string>("Reasons")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UrgentEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UrgentStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CraneId");

                    b.ToTable("UrgentLogs");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Booking", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Crane", "Crane")
                        .WithMany()
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crane");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingHazard", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Booking", "Booking")
                        .WithMany("BookingHazards")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspnetCoreMvcFull.Models.Hazard", "Hazard")
                        .WithMany()
                        .HasForeignKey("HazardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Hazard");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingItem", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Booking", "Booking")
                        .WithMany("BookingItems")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.BookingShift", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Booking", "Booking")
                        .WithMany("BookingShifts")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.UrgentLog", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Crane", "Crane")
                        .WithMany("UrgentLogs")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crane");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Booking", b =>
                {
                    b.Navigation("BookingHazards");

                    b.Navigation("BookingItems");

                    b.Navigation("BookingShifts");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Crane", b =>
                {
                    b.Navigation("UrgentLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
